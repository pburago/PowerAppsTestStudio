trigger:
  branches:
    include:
      - main  # Trigger on push to the main branch or adjust as needed

pool:
  vmImage: 'windows-latest'  # Use a Windows agent for Test Studio integration

variables:
  solutionName: 'AdmiralPowerApps'
  testStudioPath: 'C:\\Program Files (x86)\\Test Studio\\Bin'  # Update based on Test Studio installation location
  testResultsPath: '$(Build.ArtifactStagingDirectory)\\TestResults'  # Path to store test results

steps:

# Checkout the code from the repository
- task: Checkout@1
  displayName: 'Checkout code'

# Install necessary dependencies if any (PowerApps Build Tools, etc.)
- task: UseDotNet@2
  displayName: 'Install .NET SDK'
  inputs:
    packageType: 'sdk'
    version: '6.x'

# Build your PowerApps solution (replace with your actual build command)
- task: PowerAppsBuild@0
  displayName: 'Build PowerApps solution'
  inputs:
    solutionFile: '**/*.msapp'  # Use the correct path to your PowerApps solution file

# Set up Test Studio to run tests
- task: UseTestStudio@1
  displayName: 'Run Test Studio Tests'
  inputs:
    testStudioExecutablePath: '$(testStudioPath)\\TestStudio.exe'
    solutionPath: '$(Build.SourcesDirectory)\\$(solutionName)'  # Path to your solution
    testResultsDirectory: '$(testResultsPath)'  # Path where results will be saved
    testCategory: 'All'  # Adjust this to target specific test categories if needed

# Publish the test results (if Test Studio generates a report in a compatible format)
- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFiles: '$(testResultsPath)\\*.xml'  # Path to the generated test results (assumes XML format)
    testRunTitle: 'Test Studio Test Run'
    mergeTestResults: true
    failTaskOnFailedTests: true
